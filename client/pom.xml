<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org</groupId>
        <artifactId>imtp</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>org.imtp</groupId>
    <artifactId>client</artifactId>
    <description>客户端</description>

    <name>client</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <common.version>1.0.0-SNAPSHOT</common.version>
        <javafx.version>21</javafx.version>
        <javafx.plugin.version>0.0.8</javafx.plugin.version>
        <gluonfx.plugin.version>1.0.22</gluonfx.plugin.version>
        <gluonfx.plugin.version>1.0.22</gluonfx.plugin.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.imtp</groupId>
            <artifactId>common</artifactId>
            <version>${common.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>




        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <finalName>imtp-client</finalName>
        <plugins>

            <!-- 使用maven-assembly-plugin插件打包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.imtp.client.Launcher</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source> <!-- depending on your project -->
                    <target>${java.version}</target> <!-- depending on your project -->
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.openjfx</groupId>-->
<!--                <artifactId>javafx-maven-plugin</artifactId>-->
<!--                <version>${javafx.plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <mainClass>org.imtp.client.MainApp</mainClass>-->
<!--                </configuration>-->
<!--            </plugin>-->

            <!-- 本地镜像打包           -->
<!--            <plugin>-->
<!--                <groupId>com.gluonhq</groupId>-->
<!--                <artifactId>gluonfx-maven-plugin</artifactId>-->
<!--                <version>${gluonfx.plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <mainClass>org.imtp.client.Launcher</mainClass>-->
<!--                    <attachList>-->
<!--                        <list>display</list>-->
<!--                        <list>lifecycle</list>-->
<!--                        <list>statusbar</list>-->
<!--                        <list>storage</list>-->
<!--                    </attachList>-->
<!--                    <nativeImageArgs>-->
<!--                        <nativeImageArg>-H:TraceClassInitialization=true</nativeImageArg>-->
<!--                        <nativeImageArg>&#45;&#45;initialize-at-build-time=ch.qos.logback.core.pattern.parser.Parser,ch.qos.logback.core.util.StatusPrinter,ch.qos.logback.core.util.Loader,org.slf4j.impl.StaticLoggerBinder,org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,ch.qos.logback.core.spi.AppenderAttachableImpl,ch.qos.logback.core.status.StatusBase,ch.qos.logback.classic.Level,ch.qos.logback.core.status.InfoStatus,ch.qos.logback.classic.PatternLayout,ch.qos.logback.core.CoreConstants</nativeImageArg>-->
<!--                        <nativeImageArg>&#45;&#45;trace-class-initialization=ch.qos.logback.classic.Level,ch.qos.logback.core.util.Loader,ch.qos.logback.core.util.StatusPrinter,ch.qos.logback.core.CoreConstants,ch.qos.logback.classic.Logger,ch.qos.logback.core.pattern.parser.Parser</nativeImageArg>-->
<!--                        <nativeImageArg>&#45;&#45;initialize-at-run-time=io.netty.channel.AbstractChannel</nativeImageArg>-->
<!--                    </nativeImageArgs>-->
<!--                </configuration>-->
<!--            </plugin>-->


        </plugins>

    </build>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <configuration>
                            <mainClass>org.imtp.client.MainApp</mainClass>
                            <imageName>${project.artifactId}</imageName>
                            <metadataRepository>
                                <enabled>true</enabled>
                            </metadataRepository>
                            <!-- 开启快速构建模式  -->
                            <quickBuild>true</quickBuild>
                            <buildArgs>
                                <!-- 开启G1垃圾收集器  目前只有linux平台支持 -->
                                <!--                                <buildArg>&#45;&#45;gc=G1</buildArg>-->
                                <!-- 在映像构建过程中显示异常堆栈跟踪 -->
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <!-- 添加构建报告 -->
                                <buildArg>-H:+BuildReport</buildArg>
                                <buildArg>-H:TraceClassInitialization=true</buildArg>
                                <buildArg>--initialize-at-build-time=ch.qos.logback.core.pattern.parser.Parser,ch.qos.logback.core.util.StatusPrinter,ch.qos.logback.core.util.Loader,org.slf4j.impl.StaticLoggerBinder,org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,ch.qos.logback.core.spi.AppenderAttachableImpl,ch.qos.logback.core.status.StatusBase,ch.qos.logback.classic.Level,ch.qos.logback.core.status.InfoStatus,ch.qos.logback.classic.PatternLayout,ch.qos.logback.core.CoreConstants</buildArg>
                                <buildArg>--trace-class-initialization=ch.qos.logback.classic.Level,ch.qos.logback.core.util.Loader,ch.qos.logback.core.util.StatusPrinter,ch.qos.logback.core.CoreConstants,ch.qos.logback.classic.Logger,ch.qos.logback.core.pattern.parser.Parser</buildArg>
                                <buildArg>--initialize-at-run-time=io.netty.channel.AbstractChannel</buildArg>
                            </buildArgs>
                        </configuration>
                        <executions>
                            <!-- 在打包阶段在当前jvm中执行native编译 不会创建（fork）一个新的JVM来运行编译器 -->
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

</project>
