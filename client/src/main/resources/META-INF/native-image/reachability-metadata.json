{
  "reflection": [
    {
      "type": "[Ljavafx.collections.transformation.SortedList$Element;"
    },
    {
      "type": "ch.qos.logback.classic.AsyncAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.Level",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.filter.LevelFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLevel",
          "parameterTypes": [
            "ch.qos.logback.classic.Level"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.DateConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LevelConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LoggerConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.MessageConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.ThreadConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.AsyncAppenderBase",
      "methods": [
        {
          "name": "setDiscardingThreshold",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setNeverBlock",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setQueueSize",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.FileAppender",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.UnsynchronizedAppenderBase",
      "methods": [
        {
          "name": "addFilter",
          "parameterTypes": [
            "ch.qos.logback.core.filter.Filter"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.filter.AbstractMatcherFilter",
      "methods": [
        {
          "name": "setOnMatch",
          "parameterTypes": [
            "ch.qos.logback.core.spi.FilterReply"
          ]
        },
        {
          "name": "setOnMismatch",
          "parameterTypes": [
            "ch.qos.logback.core.spi.FilterReply"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.filter.Filter",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.color.BlueCompositeConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.color.GreenCompositeConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.color.RedCompositeConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.color.YellowCompositeConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingFileAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setRollingPolicy",
          "parameterTypes": [
            "ch.qos.logback.core.rolling.RollingPolicy"
          ]
        },
        {
          "name": "setTriggeringPolicy",
          "parameterTypes": [
            "ch.qos.logback.core.rolling.TriggeringPolicy"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingPolicy",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingPolicyBase",
      "methods": [
        {
          "name": "setFileNamePattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.FileAppender"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxFileSize",
          "parameterTypes": [
            "ch.qos.logback.core.util.FileSize"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxHistory",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setTotalSizeCap",
          "parameterTypes": [
            "ch.qos.logback.core.util.FileSize"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.TriggeringPolicy",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.FilterReply",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.util.FileSize",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.gluonhq.richtextarea.RichTextArea",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Screen"
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWFactory",
      "methods": [
        {
          "name": "getFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.logging.PrintLogger",
      "methods": [
        {
          "name": "createInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.logging.jfr.JFRPulseLogger",
      "methods": [
        {
          "name": "createInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.reflect.Trampoline",
      "methods": [
        {
          "name": "invoke",
          "parameterTypes": [
            "java.lang.reflect.Method",
            "java.lang.Object",
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.scene.control.skin.Utils",
      "methods": [
        {
          "name": "getResource",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.tk.quantum.QuantumToolkit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.media.jfxmediaimpl.platform.gstreamer.GSTPlatform",
      "methods": [
        {
          "name": "getPlatformInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.prism.GraphicsPipeline",
      "methods": [
        {
          "name": "getFontFactory",
          "parameterTypes": []
        },
        {
          "name": "getPipeline",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.DrawCircle_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.DrawPgram_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillCircle_ImagePattern_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillPgram_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillPgram_LinearGradient_PAD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillRoundRect_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillRoundRect_LinearGradient_PAD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Mask_TextureSuper_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_LinearGradient_PAD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureFirstPassLCD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureRGB_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureSecondPassLCD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureYV12_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Texture_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Texture_LinearGradient_PAD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.PrRenderer",
      "methods": [
        {
          "name": "createRenderer",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSBlend_SRC_ATOPPeer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext",
            "com.sun.scenario.effect.impl.Renderer",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSBlend_SRC_INPeer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext",
            "com.sun.scenario.effect.impl.Renderer",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSInvertMaskPeer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext",
            "com.sun.scenario.effect.impl.Renderer",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSLinearConvolveShadowPeer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext",
            "com.sun.scenario.effect.impl.Renderer",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSRenderer",
      "methods": [
        {
          "name": "createRenderer",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext"
          ]
        }
      ]
    },
    {
      "type": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelHandlerAdapter",
      "methods": [
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelInboundHandlerAdapter",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelUnregistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelWritabilityChanged",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelInitializer",
      "methods": [
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundHandlerAdapter",
      "methods": [
        {
          "name": "bind",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.net.SocketAddress",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "close",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "connect",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.net.SocketAddress",
            "java.net.SocketAddress",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "deregister",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "disconnect",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "flush",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "read",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext",
      "methods": [
        {
          "name": "bind",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.net.SocketAddress",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelUnregistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelWritabilityChanged",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "close",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "connect",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.net.SocketAddress",
            "java.net.SocketAddress",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "deregister",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "disconnect",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        },
        {
          "name": "flush",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "read",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "write",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object",
            "io.netty.channel.ChannelPromise"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelUnregistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelWritabilityChanged",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.SimpleChannelInboundHandler",
      "methods": [
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.handler.codec.ByteToMessageDecoder",
      "methods": [
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "io.netty.handler.codec.MessageToByteEncoder",
      "methods": [
        {
          "name": "write",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object",
            "io.netty.channel.ChannelPromise"
          ]
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
      "fields": [
        {
          "name": "droppedRecords"
        },
        {
          "name": "head"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.lang.Character",
      "methods": [
        {
          "name": "isIdeographic",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "forName",
          "parameterTypes": [
            "java.lang.Module",
            "java.lang.String"
          ]
        },
        {
          "name": "getModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Double",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "getDescriptor",
          "parameterTypes": []
        },
        {
          "name": "getLayer",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getResourceAsStream",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.ModuleLayer",
      "methods": [
        {
          "name": "boot",
          "parameterTypes": []
        },
        {
          "name": "findModule",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.UnsatisfiedLinkError"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.constant.ConstantDesc"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URLConnection",
      "methods": [
        {
          "name": "getContentLengthLong",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "alignedSlice",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "order",
          "parameterTypes": [
            "java.nio.ByteOrder"
          ]
        }
      ]
    },
    {
      "type": "java.nio.ByteOrder",
      "methods": [
        {
          "name": "nativeOrder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.nio.channels.spi.SelectorProvider",
      "methods": [
        {
          "name": "openSocketChannel",
          "parameterTypes": [
            "java.net.ProtocolFamily"
          ]
        }
      ]
    },
    {
      "type": "java.nio.charset.Charset"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.SecureRandomParameters"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "javafx.animation.KeyValue"
    },
    {
      "type": "javafx.fxml.FXMLLoader"
    },
    {
      "type": "javafx.geometry.HBox"
    },
    {
      "type": "javafx.geometry.Insets",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "double",
            "double",
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.geometry.Label"
    },
    {
      "type": "javafx.geometry.Pos",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.geometry.Separator"
    },
    {
      "type": "javafx.geometry.VBox"
    },
    {
      "type": "javafx.scene.Camera"
    },
    {
      "type": "javafx.scene.Cursor",
      "fields": [
        {
          "name": "HAND"
        },
        {
          "name": "OPEN_HAND"
        }
      ]
    },
    {
      "type": "javafx.scene.Group"
    },
    {
      "type": "javafx.scene.Node",
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getStyleClass",
          "parameterTypes": []
        },
        {
          "name": "setCursor",
          "parameterTypes": [
            "javafx.scene.Cursor"
          ]
        },
        {
          "name": "setFocusTraversable",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLayoutX",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setLayoutY",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setManaged",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setPickOnBounds",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setStyle",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setVisible",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.ParallelCamera"
    },
    {
      "type": "javafx.scene.Parent",
      "methods": [
        {
          "name": "getStylesheets",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.Scene"
    },
    {
      "type": "javafx.scene.control.Button",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDefaultButton",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.ButtonBase",
      "methods": [
        {
          "name": "setOnAction",
          "parameterTypes": [
            "javafx.event.EventHandler"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.Control"
    },
    {
      "type": "javafx.scene.control.Dialog",
      "allDeclaredFields": true
    },
    {
      "type": "javafx.scene.control.DialogPane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setContent",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.HBox"
    },
    {
      "type": "javafx.scene.control.Label",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.Labeled",
      "methods": [
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setFont",
          "parameterTypes": [
            "javafx.scene.text.Font"
          ]
        },
        {
          "name": "setMnemonicParsing",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTextAlignment",
          "parameterTypes": [
            "javafx.scene.text.TextAlignment"
          ]
        },
        {
          "name": "setTextFill",
          "parameterTypes": [
            "javafx.scene.paint.Paint"
          ]
        },
        {
          "name": "setWrapText",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.ListView",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.PasswordField",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.Separator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.Slider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.TableColumn",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.TableColumnBase",
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPrefWidth",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.TableView",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getColumns",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.TextArea",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.TextField",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.TextInputControl",
      "methods": [
        {
          "name": "setEditable",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setFont",
          "parameterTypes": [
            "javafx.scene.text.Font"
          ]
        },
        {
          "name": "setPromptText",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.VBox"
    },
    {
      "type": "javafx.scene.effect.Effect"
    },
    {
      "type": "javafx.scene.image.HBox"
    },
    {
      "type": "javafx.scene.image.Image"
    },
    {
      "type": "javafx.scene.image.ImageView",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setFitHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setFitWidth",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setImage",
          "parameterTypes": [
            "javafx.scene.image.Image"
          ]
        },
        {
          "name": "setPreserveRatio",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.image.VBox"
    },
    {
      "type": "javafx.scene.input.Clipboard"
    },
    {
      "type": "javafx.scene.input.Dragboard"
    },
    {
      "type": "javafx.scene.layout.AnchorPane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.layout.BorderPane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.AnchorPane"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.AnchorPane"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.AnchorPane",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.AnchorPane",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setCenter",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "setLeft",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "setRight",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "setTop",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.ColumnConstraints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setMaxWidth",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setMinWidth",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setPrefWidth",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.ConstraintsBase"
    },
    {
      "type": "javafx.scene.layout.GridPane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getColumnConstraints",
          "parameterTypes": []
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Button"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.GridPane"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "getColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "getRowConstraints",
          "parameterTypes": []
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Button"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Label"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextArea"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.HBox"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "getRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Button"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.GridPane"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "isColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Button"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Label"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextArea"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.HBox"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "isRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Button",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Button",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.GridPane",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.GridPane",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "java.lang.String"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setColumnIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgap",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Button",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Button",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Label",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Label",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Labeled",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.PasswordField",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextArea",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextArea",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextField",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.control.TextInputControl",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.HBox",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.HBox",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "java.lang.String"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRowIndex",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgap",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.HBox",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getHgrow",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getHgrow",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getHgrow",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "getHgrow",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "getHgrow",
          "parameterTypes": [
            "javafx.scene.control.Slider"
          ]
        },
        {
          "name": "getHgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isHgrow",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isHgrow",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "isHgrow",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "isHgrow",
          "parameterTypes": [
            "javafx.scene.control.Slider"
          ]
        },
        {
          "name": "isHgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.control.Slider",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.control.Slider",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setHgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.control.Button",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.control.ButtonBase",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.control.Label",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.control.Labeled",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.image.ImageView",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.VBox",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setSpacing",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.Pane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getChildren",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.layout.Priority",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.Region",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setMaxWidth",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setMinHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setMinWidth",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setOpaqueInsets",
          "parameterTypes": [
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setPadding",
          "parameterTypes": [
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setPrefHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setPrefWidth",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.RowConstraints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setMinHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setPrefHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.layout.Priority"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.StackPane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.HBox"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.HBox"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.HBox",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.HBox",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.VBox",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.HBox",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.geometry.Insets"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.VBox",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getVgrow",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getVgrow",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getVgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isVgrow",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isVgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.image.ImageView",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.HBox",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.Pane",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setSpacing",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.scene.layout.Priority"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setVgrow",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.scene.layout.Priority"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.media.MediaView",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.paint.Paint",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.shape.Circle",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setRadius",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.shape.LineTo"
    },
    {
      "type": "javafx.scene.shape.MoveTo"
    },
    {
      "type": "javafx.scene.shape.Path"
    },
    {
      "type": "javafx.scene.shape.PathElement"
    },
    {
      "type": "javafx.scene.shape.Rectangle"
    },
    {
      "type": "javafx.scene.shape.SVGPath"
    },
    {
      "type": "javafx.scene.shape.Shape",
      "methods": [
        {
          "name": "setFill",
          "parameterTypes": [
            "javafx.scene.paint.Paint"
          ]
        },
        {
          "name": "setStroke",
          "parameterTypes": [
            "javafx.scene.paint.Paint"
          ]
        },
        {
          "name": "setStrokeType",
          "parameterTypes": [
            "javafx.scene.shape.StrokeType"
          ]
        },
        {
          "name": "setStrokeWidth",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.shape.StrokeType",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.text.Font"
    },
    {
      "type": "javafx.scene.text.Text",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setText",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.text.TextAlignment",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.text.TextFlow",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.transform.Transform"
    },
    {
      "type": "javafx.scene.web.WebView"
    },
    {
      "type": "javafx.stage.PopupWindow"
    },
    {
      "type": "javafx.stage.Stage"
    },
    {
      "type": "javafx.stage.Window"
    },
    {
      "type": "javax.imageio.spi.ImageReaderSpi"
    },
    {
      "type": "javax.imageio.spi.ImageReaderWriterSpi",
      "methods": [
        {
          "name": "getFileSuffixes",
          "parameterTypes": []
        },
        {
          "name": "getFormatNames",
          "parameterTypes": []
        },
        {
          "name": "getMIMETypes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.imageio.spi.ImageWriterSpi"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVBSFContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVBSFList"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVBitStreamFilter"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCPBProperties"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodec",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Draw_horiz_band_AVCodecContext_AVFrame_IntPointer_int_int_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Execute2_AVCodecContext_Func_AVCodecContext_Pointer_int_int_Pointer_IntPointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Execute_AVCodecContext_Func_AVCodecContext_Pointer_Pointer_IntPointer_int_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Func_AVCodecContext_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Func_AVCodecContext_Pointer_int_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Get_buffer2_AVCodecContext_AVFrame_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Get_encode_buffer_AVCodecContext_AVPacket_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecContext$Get_format_AVCodecContext_IntPointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecDescriptor"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecHWConfig"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParameters",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParser"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParser$Parser_close_AVCodecParserContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParser$Parser_init_AVCodecParserContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParser$Parser_parse_AVCodecParserContext_AVCodecContext_PointerPointer_IntPointer_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParser$Split_AVCodecContext_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVCodecParserContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVHWAccel"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVPacket"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVPacketList"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVPacketSideData"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVPanScan"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVProducerReferenceTime"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVProfile"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVSubtitle"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.AVSubtitleRect"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.DCTContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.FFTComplex"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.FFTContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.Func_AVCodecContext_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.Func_AVCodecContext_Pointer_int_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.RDFTContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avcodec.RcOverride"
    },
    {
      "type": "org.bytedeco.ffmpeg.avdevice.AVDeviceInfo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avdevice.AVDeviceInfoList"
    },
    {
      "type": "org.bytedeco.ffmpeg.avdevice.AVDeviceRect"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVBufferSrcParameters"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter$Activate_AVFilterContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter$Init_AVFilterContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter$Preinit_AVFilterContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter$Process_command_AVFilterContext_BytePointer_BytePointer_BytePointer_int_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter$Query_func_AVFilterContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilter$Uninit_AVFilterContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterChain"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterFormats"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterFormatsConfig"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterGraph"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterGraphInternal"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterGraphSegment"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterInOut"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterInternal"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterLink"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterPad"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterPadParams"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.AVFilterParams"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.avfilter_action_func"
    },
    {
      "type": "org.bytedeco.ffmpeg.avfilter.avfilter_execute_func"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVChapter"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVCodecTag"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVFormatContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVFormatContext$Io_close2_AVFormatContext_AVIOContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVFormatContext$Io_close_AVFormatContext_AVIOContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVFormatContext$Io_open_AVFormatContext_PointerPointer_BytePointer_int_PointerPointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Read_packet_Pointer_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Read_pause_Pointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Read_seek_Pointer_int_long_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Seek_Pointer_long_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Update_checksum_long_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Write_data_type_Pointer_BytePointer_int_int_long"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOContext$Write_packet_Pointer_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIODirContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIODirEntry"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOInterruptCB"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIOInterruptCB$Callback_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVIndexEntry"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Get_device_list_AVFormatContext_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_close_AVFormatContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_header_AVFormatContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_packet_AVFormatContext_AVPacket"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_pause_AVFormatContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_play_AVFormatContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_probe_AVProbeData"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_seek2_AVFormatContext_int_long_long_long_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_seek_AVFormatContext_int_long_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVInputFormat$Read_timestamp_AVFormatContext_int_LongPointer_long"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVOpenCallback"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVOutputFormat"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVProbeData"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVProgram"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.AVStream",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Read_packet_Pointer_ByteBuffer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Read_packet_Pointer_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Read_packet_Pointer_byte___int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Seek_Pointer_long_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Write_packet_Pointer_ByteBuffer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Write_packet_Pointer_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.Write_packet_Pointer_byte___int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avformat.av_format_control_message"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVAES"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVAESCTR"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVAudioFifo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVBPrint"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVBlowfish"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVBuffer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVBufferPool"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVBufferRef"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVCAMELLIA"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVCAST5"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVChannelCustom"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVChannelLayout",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVClass"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVClass$Child_class_iterate_PointerPointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVClass$Child_next_Pointer_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVClass$Get_category_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVClass$Item_name_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVClass$Query_ranges_PointerPointer_Pointer_BytePointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVComplexDouble"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVComplexFloat"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVComplexInt32"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVComponentDescriptor"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVContentLightMetadata"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVDES"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVDictionary"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVDictionaryEntry"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVDownmixInfo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVDynamicHDRPlus"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVEncryptionInfo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVEncryptionInitInfo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVFifo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVFifoBuffer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVFifoCB"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVFrame",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVFrameSideData"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHDRPlusColorTransformParams"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHDRPlusPercentile"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHMAC"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWDeviceContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWDeviceContext$Free_AVHWDeviceContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWDeviceInternal"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWFramesConstraints"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWFramesContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWFramesContext$Free_AVHWFramesContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVHWFramesInternal"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVLFG"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVMD5"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVMasteringDisplayMetadata"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVMotionVector"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVOption"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVOptionRange"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVOptionRanges"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVPixFmtDescriptor"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVRC4"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVRIPEMD"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVRational",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVRegionOfInterest"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVReplayGain"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVSHA"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVSHA512"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVSphericalMapping"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVStereo3D"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVSubsampleEncryptionInfo"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVTEA"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVTWOFISH"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVTXContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVTimecode"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVTreeNode"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.AVXTEA"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Alloc_Pointer_long"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Alloc_long"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Callback_Pointer_int_BytePointer_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Callback_Pointer_int_String_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Cmp_Const_Pointer_Const_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Cmp_Pointer_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Enu_Pointer_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Free_Pointer_ByteBuffer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Free_Pointer_BytePointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Free_Pointer_byte__"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Free_func_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Func_Pointer_Pointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Funcs1_Pointer_double"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Funcs2_Pointer_double_double"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Int_func_Pointer_Pointer_int"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.LogCallback"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.Pool_free_Pointer"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_alias16"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_alias32"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_alias64"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_intfloat32"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_intfloat64"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_pixelutils_sad_fn"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.av_tx_fn"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.ff_pad_helper_AVBPrint"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.unaligned_16"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.unaligned_32"
    },
    {
      "type": "org.bytedeco.ffmpeg.avutil.unaligned_64"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.avcodec"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.avdevice"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.avfilter"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.avformat"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.avutil"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.postproc"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.swresample"
    },
    {
      "type": "org.bytedeco.ffmpeg.global.swscale"
    },
    {
      "type": "org.bytedeco.ffmpeg.swresample.SwrContext"
    },
    {
      "type": "org.bytedeco.ffmpeg.swscale.SwsContext",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.ffmpeg.swscale.SwsFilter"
    },
    {
      "type": "org.bytedeco.ffmpeg.swscale.SwsVector"
    },
    {
      "type": "org.bytedeco.javacpp.BoolPointer"
    },
    {
      "type": "org.bytedeco.javacpp.BooleanPointer"
    },
    {
      "type": "org.bytedeco.javacpp.BytePointer",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.javacpp.CLongPointer"
    },
    {
      "type": "org.bytedeco.javacpp.CharPointer"
    },
    {
      "type": "org.bytedeco.javacpp.DoublePointer"
    },
    {
      "type": "org.bytedeco.javacpp.FloatPointer"
    },
    {
      "type": "org.bytedeco.javacpp.IntPointer",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.javacpp.Loader"
    },
    {
      "type": "org.bytedeco.javacpp.Loader$Helper"
    },
    {
      "type": "org.bytedeco.javacpp.LongPointer"
    },
    {
      "type": "org.bytedeco.javacpp.Pointer",
      "unsafeAllocated": true
    },
    {
      "type": "org.bytedeco.javacpp.Pointer$NativeDeallocator"
    },
    {
      "type": "org.bytedeco.javacpp.PointerPointer"
    },
    {
      "type": "org.bytedeco.javacpp.ShortPointer"
    },
    {
      "type": "org.bytedeco.javacpp.SizeTPointer"
    },
    {
      "type": "org.bytedeco.javacpp.presets.javacpp",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.Client$1"
    },
    {
      "type": "org.imtp.client.MainApp",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.client.component.ServiceInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setHost",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.AbstractController",
      "allDeclaredFields": true
    },
    {
      "type": "org.imtp.client.controller.ChatController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.ChatEmojiDialog",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.ChatItemController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.HeadClose",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.HomeController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.LoginController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        },
        {
          "name": "login",
          "parameterTypes": []
        },
        {
          "name": "login",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserFriendController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserFriendDetailsController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserFriendItemController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserGroupController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserGroupDetailsController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserGroupItemController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserSessionController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.UserSessionItemController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.controller.VideoPlayerDialog",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "initialize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.client.handler.AbstractMessageModelHandler",
      "methods": [
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.client.handler.AuthenticationHandler"
    },
    {
      "type": "org.imtp.client.handler.ClientCmdHandlerHandler",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.client.handler.LoginHandler",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.codec.IMTPDecoder"
    },
    {
      "type": "org.imtp.common.codec.IMTPEncoder"
    },
    {
      "type": "org.imtp.common.enums.ClientType",
      "allDeclaredFields": true
    },
    {
      "type": "org.imtp.common.enums.DeliveryMethod",
      "allDeclaredFields": true
    },
    {
      "type": "org.imtp.common.enums.Gender",
      "allDeclaredFields": true
    },
    {
      "type": "org.imtp.common.enums.MessageType",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.MessageMetadata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDuration",
          "parameterTypes": []
        },
        {
          "name": "getDurationDesc",
          "parameterTypes": []
        },
        {
          "name": "getHeight",
          "parameterTypes": []
        },
        {
          "name": "getMediaType",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getPreviewUrl",
          "parameterTypes": []
        },
        {
          "name": "getSize",
          "parameterTypes": []
        },
        {
          "name": "getSizeDesc",
          "parameterTypes": []
        },
        {
          "name": "getThumbnailUrl",
          "parameterTypes": []
        },
        {
          "name": "getWidth",
          "parameterTypes": []
        },
        {
          "name": "setDuration",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setDurationDesc",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setHeight",
          "parameterTypes": [
            "java.lang.Double"
          ]
        },
        {
          "name": "setMediaType",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPreviewUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSize",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setSizeDesc",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setThumbnailUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setWidth",
          "parameterTypes": [
            "java.lang.Double"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.LoginInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getPassword",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.OfflineMessageInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setContent",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDeliveryMethod",
          "parameterTypes": [
            "org.imtp.common.enums.DeliveryMethod"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setReceiver",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setSendTime",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setSender",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setType",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.TokenInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAccessToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setClientType",
          "parameterTypes": [
            "org.imtp.common.enums.ClientType"
          ]
        },
        {
          "name": "setExpiration",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setRefreshToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRememberMeToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.UserFriendInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAccount",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setGender",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setGender",
          "parameterTypes": [
            "org.imtp.common.enums.Gender"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setNickname",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNote",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRegion",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTagline",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.UserGroupInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setGroupName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setGroupUserInfos",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.UserInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setGender",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setNickname",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.packet.body.UserSessionInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDeliveryMethod",
          "parameterTypes": [
            "org.imtp.common.enums.DeliveryMethod"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setLastMessageMetadata",
          "parameterTypes": [
            "org.imtp.common.packet.MessageMetadata"
          ]
        },
        {
          "name": "setLastMsgContent",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLastMsgTime",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setLastMsgType",
          "parameterTypes": [
            "org.imtp.common.enums.MessageType"
          ]
        },
        {
          "name": "setLastSendMsgUserId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setLastUserAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLastUserName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setReceiverUserId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.Long"
          ]
        }
      ]
    },
    {
      "type": "org.imtp.common.response.Result",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setCode",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setData",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setMessage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSucceed",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        }
      ]
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "copyMemory",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "java.lang.Object",
            "long",
            "long"
          ]
        },
        {
          "name": "getAndAddLong",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "long"
          ]
        },
        {
          "name": "getAndSetObject",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "java.lang.Object"
          ]
        },
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        },
        {
          "name": "storeFence",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "type": "sun.security.provider.DRBG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    }
  ],
  "jni": [
    {
      "type": "[Lcom.sun.glass.ui.Screen;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "com.sun.glass.ui.CommonDialogs",
      "methods": [
        {
          "name": "createFileChooserResult",
          "parameterTypes": [
            "java.lang.String[]",
            "com.sun.glass.ui.CommonDialogs$ExtensionFilter[]",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.CommonDialogs$ExtensionFilter",
      "methods": [
        {
          "name": "extensionsToArray",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Cursor",
      "methods": [
        {
          "name": "getNativeCursor",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Screen",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Size",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_COLOR_F",
      "fields": [
        {
          "name": "a"
        },
        {
          "name": "b"
        },
        {
          "name": "g"
        },
        {
          "name": "r"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_MATRIX_3X2_F",
      "fields": [
        {
          "name": "_11"
        },
        {
          "name": "_12"
        },
        {
          "name": "_21"
        },
        {
          "name": "_22"
        },
        {
          "name": "_31"
        },
        {
          "name": "_32"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_PIXEL_FORMAT",
      "fields": [
        {
          "name": "alphaMode"
        },
        {
          "name": "format"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_POINT_2F",
      "fields": [
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_RENDER_TARGET_PROPERTIES",
      "fields": [
        {
          "name": "dpiX"
        },
        {
          "name": "dpiY"
        },
        {
          "name": "minLevel"
        },
        {
          "name": "pixelFormat"
        },
        {
          "name": "type"
        },
        {
          "name": "usage"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWRITE_GLYPH_METRICS",
      "fields": [
        {
          "name": "advanceHeight"
        },
        {
          "name": "advanceWidth"
        },
        {
          "name": "bottomSideBearing"
        },
        {
          "name": "leftSideBearing"
        },
        {
          "name": "rightSideBearing"
        },
        {
          "name": "topSideBearing"
        },
        {
          "name": "verticalOriginY"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWRITE_GLYPH_RUN",
      "fields": [
        {
          "name": "advanceOffset"
        },
        {
          "name": "ascenderOffset"
        },
        {
          "name": "bidiLevel"
        },
        {
          "name": "fontEmSize"
        },
        {
          "name": "fontFace"
        },
        {
          "name": "glyphAdvances"
        },
        {
          "name": "glyphIndices"
        },
        {
          "name": "isSideways"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWRITE_MATRIX",
      "fields": [
        {
          "name": "dx"
        },
        {
          "name": "dy"
        },
        {
          "name": "m11"
        },
        {
          "name": "m12"
        },
        {
          "name": "m21"
        },
        {
          "name": "m22"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.RECT",
      "fields": [
        {
          "name": "bottom"
        },
        {
          "name": "left"
        },
        {
          "name": "right"
        },
        {
          "name": "top"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.iio.common.ImageLoaderImpl",
      "methods": [
        {
          "name": "emitWarning",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.iio.jpeg.JPEGImageLoader",
      "methods": [
        {
          "name": "setInputAttributes",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int",
            "byte[]"
          ]
        },
        {
          "name": "setOutputAttributes",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "updateImageProgress",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.media.jfxmedia.locator.ConnectionHolder",
      "fields": [
        {
          "name": "buffer"
        }
      ],
      "methods": [
        {
          "name": "closeConnection",
          "parameterTypes": []
        },
        {
          "name": "isRandomAccess",
          "parameterTypes": []
        },
        {
          "name": "isSeekable",
          "parameterTypes": []
        },
        {
          "name": "needBuffer",
          "parameterTypes": []
        },
        {
          "name": "property",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "readBlock",
          "parameterTypes": [
            "long",
            "int"
          ]
        },
        {
          "name": "readNextBlock",
          "parameterTypes": []
        },
        {
          "name": "seek",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.media.jfxmedia.locator.Locator",
      "methods": [
        {
          "name": "createConnectionHolder",
          "parameterTypes": []
        },
        {
          "name": "getStringLocation",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.media.jfxmedia.logging.Logger",
      "methods": [
        {
          "name": "logMsg",
          "parameterTypes": [
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "logMsg",
          "parameterTypes": [
            "int",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.media.jfxmediaimpl.NativeMediaPlayer",
      "methods": [
        {
          "name": "sendAudioSpectrumEvent",
          "parameterTypes": [
            "double",
            "double",
            "boolean"
          ]
        },
        {
          "name": "sendAudioTrack",
          "parameterTypes": [
            "boolean",
            "long",
            "java.lang.String",
            "int",
            "java.lang.String",
            "int",
            "int",
            "float"
          ]
        },
        {
          "name": "sendBufferProgressEvent",
          "parameterTypes": [
            "double",
            "long",
            "long",
            "long"
          ]
        },
        {
          "name": "sendDurationUpdateEvent",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "sendFrameSizeChangedEvent",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "sendMarkerEvent",
          "parameterTypes": [
            "java.lang.String",
            "double"
          ]
        },
        {
          "name": "sendNewFrameEvent",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "sendPlayerHaltEvent",
          "parameterTypes": [
            "java.lang.String",
            "double"
          ]
        },
        {
          "name": "sendPlayerMediaErrorEvent",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "sendPlayerStateEvent",
          "parameterTypes": [
            "int",
            "double"
          ]
        },
        {
          "name": "sendSubtitleTrack",
          "parameterTypes": [
            "boolean",
            "long",
            "java.lang.String",
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "sendVideoTrack",
          "parameterTypes": [
            "boolean",
            "long",
            "java.lang.String",
            "int",
            "int",
            "int",
            "float",
            "boolean"
          ]
        },
        {
          "name": "sendWarning",
          "parameterTypes": [
            "int",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.media.jfxmediaimpl.platform.gstreamer.GSTMediaPlayer"
    },
    {
      "type": "com.sun.prism.impl.PrismSettings",
      "fields": [
        {
          "name": "disableD3D9Ex"
        },
        {
          "name": "forceGPU"
        },
        {
          "name": "isVsyncEnabled"
        },
        {
          "name": "verbose"
        }
      ]
    },
    {
      "type": "java.awt.Insets",
      "fields": [
        {
          "name": "bottom"
        },
        {
          "name": "left"
        },
        {
          "name": "right"
        },
        {
          "name": "top"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.Toolkit",
      "methods": [
        {
          "name": "getDefaultToolkit",
          "parameterTypes": []
        },
        {
          "name": "getFontMetrics",
          "parameterTypes": [
            "java.awt.Font"
          ]
        }
      ]
    },
    {
      "type": "java.awt.image.BufferedImage",
      "fields": [
        {
          "name": "colorModel"
        },
        {
          "name": "imageType"
        },
        {
          "name": "raster"
        }
      ],
      "methods": [
        {
          "name": "getRGB",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "int",
            "int"
          ]
        },
        {
          "name": "setRGB",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.image.ColorModel",
      "fields": [
        {
          "name": "colorSpace"
        },
        {
          "name": "colorSpaceType"
        },
        {
          "name": "isAlphaPremultiplied"
        },
        {
          "name": "is_sRGB"
        },
        {
          "name": "nBits"
        },
        {
          "name": "numComponents"
        },
        {
          "name": "supportsAlpha"
        },
        {
          "name": "transparency"
        }
      ],
      "methods": [
        {
          "name": "getRGBdefault",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.image.Raster",
      "fields": [
        {
          "name": "dataBuffer"
        },
        {
          "name": "height"
        },
        {
          "name": "minX"
        },
        {
          "name": "minY"
        },
        {
          "name": "numBands"
        },
        {
          "name": "numDataElements"
        },
        {
          "name": "sampleModel"
        },
        {
          "name": "sampleModelTranslateX"
        },
        {
          "name": "sampleModelTranslateY"
        },
        {
          "name": "width"
        }
      ]
    },
    {
      "type": "java.awt.image.SampleModel",
      "fields": [
        {
          "name": "height"
        },
        {
          "name": "width"
        }
      ],
      "methods": [
        {
          "name": "getPixels",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "java.awt.image.DataBuffer"
          ]
        },
        {
          "name": "setPixels",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "java.awt.image.DataBuffer"
          ]
        }
      ]
    },
    {
      "type": "java.io.InputStream",
      "methods": [
        {
          "name": "read",
          "parameterTypes": [
            "byte[]",
            "int",
            "int"
          ]
        },
        {
          "name": "skip",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "forName",
          "parameterTypes": [
            "java.lang.String",
            "boolean",
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Object",
      "methods": [
        {
          "name": "toString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Runnable",
      "methods": [
        {
          "name": "run",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.SecurityManager",
      "fields": [
        {
          "name": "initialized"
        }
      ]
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "java.nio.charset.Charset"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        },
        {
          "name": "getBytes",
          "parameterTypes": [
            "java.nio.charset.Charset"
          ]
        },
        {
          "name": "toLowerCase",
          "parameterTypes": [
            "java.util.Locale"
          ]
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "capacity"
        },
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.charset.Charset",
      "methods": [
        {
          "name": "forName",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.ArrayList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "add",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.util.HashMap",
      "methods": [
        {
          "name": "containsKey",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "put",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "org.bytedeco.javacpp.Loader",
      "methods": [
        {
          "name": "putMemberOffset",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.bytedeco.javacpp.Pointer",
      "fields": [
        {
          "name": "address"
        },
        {
          "name": "capacity"
        },
        {
          "name": "deallocator"
        },
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "init",
          "parameterTypes": [
            "long",
            "long",
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "org.bytedeco.javacpp.Pointer$NativeDeallocator",
      "fields": [
        {
          "name": "ownerAddress"
        }
      ]
    },
    {
      "type": "sun.awt.image.ByteComponentRaster",
      "fields": [
        {
          "name": "data"
        },
        {
          "name": "dataOffsets"
        },
        {
          "name": "pixelStride"
        },
        {
          "name": "scanlineStride"
        },
        {
          "name": "type"
        }
      ]
    }
  ]
}